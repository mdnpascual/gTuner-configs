#pragma METAINFO("Ghost_of_tsushima_Helper", 1, 0, "mdnpascual")
#include <keyboard.gph>
#include <mouse.gph>

fix32 x_val;
fix32 y_val;
int short_bow_mode;
int short_bow_toggle;
int long_bow_mode;
int long_bow_toggle;
int aim_throw_mode;
int aim_throw_toggle;

init{
	x_val = 0.0;
	y_val = 0.0;
	short_bow_mode = 0;
	short_bow_toggle = 0;
	long_bow_mode = 0;
	long_bow_toggle = 0;
	aim_throw_mode = 0;
	aim_throw_toggle = 0;
}
main {
	
	// INTERPOLATE LEFT STICK FOR CLIMBING FIX
	if(get_actual(STICK_2_X) == 100.0){
		if(x_val < 20.0) x_val = 20.0;
		if(x_val < 100.0) x_val = clamp(x_val + (fix32)(time_active(STICK_2_X) / 30), 20.0, 100.0);
		set_val(STICK_2_X, x_val);
	}
	
	if(get_actual(STICK_2_X) == -100.0){
		if(x_val > -20.0) x_val = -20.0;
		if(x_val > -100.0) x_val = clamp(x_val - (fix32)(time_active(STICK_2_X) / 30), -100.0, -20.0);
		set_val(STICK_2_X, x_val);
	}
	
	if(get_actual(STICK_2_Y) == 100.0){
		if(y_val < 20.0) x_val = 20.0;
		if(y_val < 100.0) y_val = clamp(y_val + (fix32)(time_active(STICK_2_Y) / 30), 20.0, 100.0);
		set_val(STICK_2_Y, y_val);
	}
	
	if(get_actual(STICK_2_Y) == -100.0){
		if(y_val > -20.0) y_val = -20.0;
		if(y_val > -100.0) y_val = clamp(y_val - (fix32)(time_active(STICK_2_Y) / 30), -100.0, -20.0);
		set_val(STICK_2_Y, y_val);
	}
	
	if(is_release(STICK_2_X)) x_val = 0.0;
	if(is_release(STICK_2_Y)) y_val = 0.0;
	
	// BOW AIMING
	if(mouse_status(MBUTTON_2)){
		if(mouse_status(MBUTTON_1)){
			set_val(BUTTON_5, 100.00);
		}
		// Change Ranged Weapon
		if(key_status(KEY_1)){
			short_bow_toggle = 0;
			set_val(BUTTON_10, 100.00);
			// Short bow projectile selection
			if(short_bow_mode == 0){
				set_val(BUTTON_17, 100.00);
			} else if (short_bow_mode == 1){
				set_val(BUTTON_14, 100.00);
			}
		} else if (key_status(KEY_2)){
			aim_throw_toggle = 0;
			set_val(BUTTON_12, 100.00);
			// aim throwables projectile selection
			if(aim_throw_mode == 0){
				set_val(BUTTON_17, 100.00);
			} else if (aim_throw_mode == 1){
				set_val(BUTTON_14, 100.00);
			} else if (aim_throw_mode == 2){
				set_val(BUTTON_15, 100.00);
			}
		} else if (key_status(KEY_3)){
			long_bow_toggle = 0;
			set_val(BUTTON_13, 100.00);
			// Long bow projectile selection
			if(long_bow_mode == 0){
				set_val(BUTTON_17, 100.00);
			} else if (long_bow_mode == 1){
				set_val(BUTTON_14, 100.00);
			}
		} else if (!key_status(KEY_1) && short_bow_toggle == 0){
			// Toggle Short bow
			if(short_bow_mode == 0){
				short_bow_mode = 1;
			} else if (short_bow_mode == 1){
				short_bow_mode = 0;
			}
			short_bow_toggle = 1;
		} else if (!key_status(KEY_2) && aim_throw_toggle == 0){
			// Toggle aim throwables
			if(aim_throw_mode == 0){
				aim_throw_mode = 1;
			} else if (aim_throw_mode == 1){
				aim_throw_mode = 2;
			} else if (aim_throw_mode == 2){
				aim_throw_mode = 0;
			}
			aim_throw_toggle = 1;
		} else if (!key_status(KEY_3) && long_bow_toggle == 0){
			// Toggle Long bow
			if(long_bow_mode == 0){
				long_bow_mode = 1;
			} else if (long_bow_mode == 1){
				long_bow_mode = 0;
			}
			long_bow_toggle = 1;
		}
	} else if(key_status(KEY_E)){ 
		// Quick Throwables
		if(key_status(KEY_1)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_12, 100.00);
		} else if (key_status(KEY_2)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_10, 100.00);
		} else if (key_status(KEY_3)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_11, 100.00);
		} else if (key_status(KEY_4)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_11, 100.00);
		}
	} else {
		// Stance
		if(key_status(KEY_1)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_16, 100.00);
		} else if (key_status(KEY_2)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_15, 100.00);
		} else if (key_status(KEY_3)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_14, 100.00);
		} else if (key_status(KEY_4)){
			set_val(BUTTON_5, 100.00);
			set_val(BUTTON_17, 100.00);
		}
	}
	// Guiding Wind
	if(key_status(KEY_G)){
		combo_run(Pad_Up);
	}
}

combo Pad_Up {
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -6.31);
    set_val(POINT_1_Y, 68.33);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -6.83);
    set_val(POINT_1_Y, 63.87);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -8.91);
    set_val(POINT_1_Y, 20.72);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -6.93);
    set_val(POINT_1_Y, -30.07);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 1.62);
    set_val(POINT_1_Y, -80.45);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 9.95);
    set_val(POINT_1_Y, -91.92);
    wait(10);
    set_val(BUTTON_19, 0.00);
    set_val(POINT_1_X, 9.95);
    set_val(POINT_1_Y, -91.92);
    wait(10);
}

combo Pad_Down {
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 16.62);
    set_val(POINT_1_Y, -72.16);
    wait(10);
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 15.06);
    set_val(POINT_1_Y, -44.53);
    wait(10);
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 14.33);
    set_val(POINT_1_Y, -5.21);
    wait(10);
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 14.43);
    set_val(POINT_1_Y, 29.01);
    wait(10);
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 15.27);
    set_val(POINT_1_Y, 63.44);
    wait(10);
	set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 15.79);
    set_val(POINT_1_Y, 82.57);
    wait(10);
    set_val(BUTTON_19, 0.00);
    set_val(POINT_1_X, 15.79);
    set_val(POINT_1_Y, 82.57);
    wait(10);
}

combo Pad_Left {
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 24.02);
    set_val(POINT_1_Y, -4.36);
    set_val(ACCEL_1_Y, 13.50);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 19.54);
    set_val(POINT_1_Y, -12.43);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 5.37);
    set_val(POINT_1_Y, -26.67);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -16.73);
    set_val(POINT_1_Y, -33.90);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -43.30);
    set_val(POINT_1_Y, -27.52);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -73.94);
    set_val(POINT_1_Y, -10.73);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -94.58);
    set_val(POINT_1_Y, 8.40);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
    set_val(BUTTON_19, 0.00);
    set_val(POINT_1_X, -94.58);
    set_val(POINT_1_Y, 8.40);
    set_val(ACCEL_1_Y, 0.00);
    wait(10);
}

combo Pad_Right {
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -4.53);
    set_val(POINT_1_Y, 22.00);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, -3.49);
    set_val(POINT_1_Y, 21.15);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 2.45);
    set_val(POINT_1_Y, 17.53);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 21.31);
    set_val(POINT_1_Y, 8.40);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 47.58);
    set_val(POINT_1_Y, 1.38);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 76.76);
    set_val(POINT_1_Y, -1.81);
    wait(10);
    set_val(BUTTON_19, 100.00);
    set_val(POINT_1_X, 89.79);
    set_val(POINT_1_Y, 0.11);
    wait(10);
	set_val(BUTTON_19, 0.00);
    set_val(POINT_1_X, 89.79);
    set_val(POINT_1_Y, 0.11);
    wait(10);
	
}